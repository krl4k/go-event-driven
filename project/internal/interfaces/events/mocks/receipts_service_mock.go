// Code generated by MockGen. DO NOT EDIT.
// Source: tickets/internal/interfaces/events (interfaces: ReceiptsService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	domain "tickets/internal/domain/tickets"

	gomock "github.com/golang/mock/gomock"
)

// MockReceiptsService is a mock of ReceiptsService interface.
type MockReceiptsService struct {
	ctrl     *gomock.Controller
	recorder *MockReceiptsServiceMockRecorder
}

// MockReceiptsServiceMockRecorder is the mock recorder for MockReceiptsService.
type MockReceiptsServiceMockRecorder struct {
	mock *MockReceiptsService
}

// NewMockReceiptsService creates a new mock instance.
func NewMockReceiptsService(ctrl *gomock.Controller) *MockReceiptsService {
	mock := &MockReceiptsService{ctrl: ctrl}
	mock.recorder = &MockReceiptsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReceiptsService) EXPECT() *MockReceiptsServiceMockRecorder {
	return m.recorder
}

// IssueReceipt mocks base method.
func (m *MockReceiptsService) IssueReceipt(arg0 context.Context, arg1 domain.IssueReceiptRequest) (*domain.IssueReceiptResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IssueReceipt", arg0, arg1)
	ret0, _ := ret[0].(*domain.IssueReceiptResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IssueReceipt indicates an expected call of IssueReceipt.
func (mr *MockReceiptsServiceMockRecorder) IssueReceipt(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IssueReceipt", reflect.TypeOf((*MockReceiptsService)(nil).IssueReceipt), arg0, arg1)
}
