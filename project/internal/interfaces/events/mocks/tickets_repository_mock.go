// Code generated by MockGen. DO NOT EDIT.
// Source: tickets/internal/interfaces/events (interfaces: TicketsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	entities "tickets/internal/entities"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockTicketsRepository is a mock of TicketsRepository interface.
type MockTicketsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTicketsRepositoryMockRecorder
}

// MockTicketsRepositoryMockRecorder is the mock recorder for MockTicketsRepository.
type MockTicketsRepositoryMockRecorder struct {
	mock *MockTicketsRepository
}

// NewMockTicketsRepository creates a new mock instance.
func NewMockTicketsRepository(ctrl *gomock.Controller) *MockTicketsRepository {
	mock := &MockTicketsRepository{ctrl: ctrl}
	mock.recorder = &MockTicketsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTicketsRepository) EXPECT() *MockTicketsRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTicketsRepository) Create(arg0 context.Context, arg1 *entities.Ticket) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTicketsRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTicketsRepository)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockTicketsRepository) Delete(arg0 context.Context, arg1 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTicketsRepositoryMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTicketsRepository)(nil).Delete), arg0, arg1)
}
